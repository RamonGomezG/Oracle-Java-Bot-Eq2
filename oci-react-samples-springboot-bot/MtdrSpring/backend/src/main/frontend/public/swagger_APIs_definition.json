{
    "swagger": "2.0",
    "info": {
      "description": "Simple REST APIs for My ToDo React application. The backend implements these APIs.",
      "version": "1.0.0",
      "title": "My Todo React app",
      "contact": {
        "email": "jean.de.lavarene@oracle.com"
      },
      "license": {
        "name": "The Universal Permissive License (UPL), Version 1.0",
        "url": "https://oss.oracle.com/licenses/upl/"
      }
    },
    "host": "di2eyonlz5s7kmuektcddaw5zq.apigateway.eu-frankfurt-1.oci.customer-oci.com",
    "basePath": "/",
    "tags": [
      {
        "name": "todolist",
        "description": "Everything about your todo list",
        "externalDocs": {
          "description": "Find out more",
          "url": "http://swagger.io"
        }
      }
    ],
    "schemes": [
      "https"
    ],
    "paths": {
      "/todolist": {
        "get": {
          "tags": [
            "todolist"
          ],
          "summary": "Returns current list of todo items",
          "description": "",
          "operationId": "getItems",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/AllItems"
              }
            }
          }
        },
        "post": {
          "tags": [
            "todolist"
          ],
          "summary": "Add a new item to the todolist",
          "description": "",
          "operationId": "addItem",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Todo item object that needs to be added to the list",
              "required": true,
              "schema": {
                "$ref": "#/definitions/NewItem"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Success"
            },
            "405": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/todolist/{itemId}": {
        "get": {
          "tags": [
            "todolist"
          ],
          "summary": "Find todo item by ID",
          "description": "Returns a single todo item",
          "operationId": "getTodoById",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "description": "ID of todo item to return",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/Item"
              }
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Item not found"
            }
          }
        },
        "put": {
          "tags": [
            "todolist"
          ],
          "summary": "Updates an existing item",
          "description": "",
          "operationId": "updateItem",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "description": "Item id to update",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Pet object that needs to be added to the store",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateItem"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Item not found"
            },
            "405": {
              "description": "Validation exception"
            }
          }
        },
        "delete": {
          "tags": [
            "todolist"
          ],
          "summary": "Deletes an item from the list",
          "description": "",
          "operationId": "deleteItem",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "description": "Item id to delete",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "204": {
              "description": "Success"
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Item not found"
            }
          }
        }
      }
    },
    "definitions": {
      "AllItems": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Item"
        }
      },
      "NewItem": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "UpdateItem": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "done": {
            "type": "boolean"
          }
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "done": {
            "type": "boolean"
          }
        }
      }
    }
  }